name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.0.1, etc.

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests
      run: |
        pytest --cov

  build-windows:
    runs-on: windows-latest
    needs: test  # Only build if tests pass
    permissions:
      contents: write  # Required to create releases

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install midiutil pygame numpy pyyaml

    - name: Build executable with PyInstaller
      run: |
        # Create a generic spec file that works in CI environment
        pyinstaller --name=Yourdio --onefile --windowed --noconsole `
          --add-data "yourdio.py;." `
          --add-data "theme_loader.py;." `
          --add-data "event_generator.py;." `
          --add-data "theme_schema.yaml;." `
          --add-data "themes;themes" `
          --hidden-import=yaml `
          --hidden-import=midiutil `
          --hidden-import=pygame `
          --hidden-import=numpy `
          --hidden-import=tkinter `
          --hidden-import=tkinter.ttk `
          --hidden-import=tkinter.filedialog `
          --hidden-import=tkinter.messagebox `
          --hidden-import=tkinter.scrolledtext `
          yourdio_gui.py

    - name: Create release archive
      run: |
        mkdir release
        Copy-Item "dist\Yourdio.exe" "release\Yourdio.exe"
        # Copy themes folder if it exists
        if (Test-Path "themes") {
          Copy-Item -Recurse "themes" "release\themes"
        }
        # Copy README if it exists
        if (Test-Path "README.md") {
          Copy-Item "README.md" "release\README.md"
        }
        # Create zip archive
        Compress-Archive -Path "release\*" -DestinationPath "Yourdio-${{ github.ref_name }}-Windows.zip"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Yourdio-${{ github.ref_name }}-Windows.zip
          dist/Yourdio.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
